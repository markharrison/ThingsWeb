<!DOCTYPE html>
<html>
<head>
    <title>Azure AppDev Challenge</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="keywords" content="" />
    <meta name="author" content="" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
            integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin=""></script>
    <style rel="stylesheet" type="text/css">
        body {
            font-family: Arial, Helvetica, sans-serif;
            font-size: 13px;
        }
    </style>

    <!-- temp dummy data  -->
    <script type="text/javascript" id="pindata" src="js/pindata2.js"></script>  

    <script type='text/javascript'>
        var vMap;
        var vMapPins = new Array(100);

        // https://github.com/pointhi/leaflet-color-markers
        var greenIcon = new L.Icon({
            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34]
            });

        var redIcon = new L.Icon({
            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34]
            });

        var amberIcon = new L.Icon({
            iconUrl: 'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-orange.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34]
            });

        function DisplayPin(vThingid,vName,vLongitude,vLatitude,vText,vStatus,vImage){

           //var vIcon = (vStatus === "red") ? redIcon : (vStatus === "amber")  ? amberIcon : greenIcon;
           var vIcon = (Math.random() > 0.5) ? redIcon : greenIcon;

            if (typeof vMapPins[vThingid] === "undefined")
            {
                vMapPins[vThingid] = L.marker([vLatitude, vLongitude]).setIcon(vIcon).bindPopup(vName).addTo(vMap);       
            }
            else
            {    
                vMapPins[vThingid].setIcon(vIcon);
            }
            
        }
 
        function UpdateMap(vPinData) {

            for (i = 0; i < vPinData.length; i++) { 
                var vPin = vPinData[i];
                DisplayPin(vPin.thingid,vPin.name,vPin.longitude,vPin.latitude,vPin.text,vPin.status,vPin.image);
            } 

            var x = new Date()
            document.getElementById('idTime').innerHTML = "Updated: " + x.toUTCString();
        }

        function GetMapData() {

            // poll every 30 seconds 
            window.setTimeout(GetMapData, 30000);

            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {

                    UpdateMap(JSON.parse(this.responseText));
                }
            };

            xhttp.open("GET", "http://localhost:5287/api/Things", true);
            xhttp.send();

     //       UpdateMap(vDummyData);   

        }

        function GetMap() {

            var sKey = '3rLQZ7rPQsOkz3XOoxahmj4WqQ28_8KO-B7TpNltW-I';

            vMap = L.map('myMap').setView([51.505, -1],7.5);

            L.tileLayer('https://atlas.microsoft.com/map/tile/png?api-version=1&layer=basic&style=main&tileSize=512&zoom={z}&x={x}&y={y}&subscription-key={subscriptionKey}', {
                attribution: '© ' + new Date().getFullYear() + ' Microsoft, © 1992 - ' + new Date().getFullYear() + ' TomTom',
                maxZoom: 18,
                tileSize: 512,
                zoomOffset: -1,
                id: 'azuremaps.road',
                crossOrigin: true,
                subscriptionKey: sKey
            }).addTo(vMap);

            GetMapData();
        }

    </script>

</head>

<body onload="GetMap()">
    <div id="myMap" style="position:relative;width:100%;min-width:350px;height:700px;"></div>
    <fieldset style="width:calc(100% - 30px);min-width:350px;margin-top:10px;">
        <legend>Thing Info&nbsp;-&nbsp;<span id='idTime' ></span></legend>
        <span id='idThings' ></span>
     </fieldset>
</body>

</html>